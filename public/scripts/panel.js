// Generated by CoffeeScript 1.7.1
(function() {
  var MoreInfoView, StudentCollection, StudentModel, StudentView, displayStudents, search, stoppedTyping, students,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  StudentModel = (function(_super) {
    __extends(StudentModel, _super);

    function StudentModel() {
      return StudentModel.__super__.constructor.apply(this, arguments);
    }

    StudentModel.prototype.urlRoot = '/student/';

    return StudentModel;

  })(Backbone.Model);

  StudentCollection = (function(_super) {
    __extends(StudentCollection, _super);

    function StudentCollection() {
      return StudentCollection.__super__.constructor.apply(this, arguments);
    }

    StudentCollection.prototype.model = StudentModel;

    StudentCollection.prototype.initalize = function(attributes) {
      return StudentCollection.__super__.initalize.call(this, attributes);
    };

    StudentCollection.prototype.url = function() {
      return '/api/fetch-students/';
    };

    return StudentCollection;

  })(Backbone.Collection);

  StudentView = (function(_super) {
    __extends(StudentView, _super);

    function StudentView() {
      return StudentView.__super__.constructor.apply(this, arguments);
    }

    StudentView.prototype.events = {
      "click": "openPanel",
      "click .small.read.close-it": "closePanel"
    };

    StudentView.prototype.tagName = "div";

    StudentView.prototype.templateName = "panel-template";

    StudentView.prototype.initalize = function(options) {
      return StudentView.__super__.initalize.apply(this, arguments);
    };

    StudentView.prototype.templateArgs = function() {
      return {
        student: this.model
      };
    };

    StudentView.prototype.render = function() {
      return StudentView.__super__.render.apply(this, arguments);
    };

    StudentView.prototype.openPanel = function() {
      var more_info, student;
      student = this.model;
      if (!this.$el.hasClass('expanded')) {
        this.closePanel();
        this.$el.addClass('expanded').animate({
          width: '830px'
        }, 500, function() {}).find('.content').css({
          width: '830px'
        });
        this.$el.find('.small.read').hide();
        this.$el.find('.footer').hide();
        this.$el.find('.content').append('<div class="more-info"></div>');
        more_info = new MoreInfoView({
          el: $('.more-info'),
          model: student
        });
        return more_info.render();
      }
    };

    StudentView.prototype.closePanel = function() {
      var expanded;
      expanded = $('.expanded');
      expanded.removeClass('expanded').animate({
        width: '320px'
      }, 500, function() {}).find('.content').css({
        width: '320px'
      }).append('<div class="more-info></div>');
      expanded.find('.small.read').show();
      expanded.find('.footer').show();
      return expanded.find('.more-info').remove();
    };

    return StudentView;

  })(TemplatedView);

  MoreInfoView = (function(_super) {
    __extends(MoreInfoView, _super);

    function MoreInfoView() {
      return MoreInfoView.__super__.constructor.apply(this, arguments);
    }

    MoreInfoView.prototype.tagName = 'div';

    MoreInfoView.prototype.templateName = 'more-info-template';

    MoreInfoView.prototype.initalize = function() {
      return MoreInfoView.__super__.initalize.apply(this, arguments);
    };

    MoreInfoView.prototype.render = function() {
      return MoreInfoView.__super__.render.apply(this, arguments);
    };

    return MoreInfoView;

  })(TemplatedView);

  displayStudents = function() {
    $('.panels').children().remove();
    return students.each(function(student) {
      var name, panel;
      if (student.attributes.year === $('.year.selected').attr('id') && student.attributes.name.toLowerCase().indexOf(search.val().toLowerCase()) >= 0) {
        name = student.get('name').replace(/\ /g, '-').replace("'", "-");
        $('.panels').append('<a id="' + name + '" class="panel navy" data-color="navy"></a>');
        panel = new StudentView({
          el: $('#' + name),
          model: student
        });
        return panel.render();
      }
    });
  };

  students = new StudentCollection();

  students.fetch();

  $('.year#Freshman').addClass('selected');

  $('.year').click(function() {
    $('.year').removeClass('selected');
    $(this).addClass('selected');
    if (search.val().length > 2) {
      return displayStudents();
    }
  });

  search = $('.search input');

  stoppedTyping = null;

  search.focus().keyup(function() {
    if (search.val().length > 2) {
      if (stoppedTyping) {
        clearTimeout(stoppedTyping);
      }
      return stoppedTyping = setTimeout(function() {
        return displayStudents();
      }, 750);
    } else {
      return $('.panels').children().remove();
    }
  });

  this.StudentModel = StudentModel;

  this.StudentCollection = StudentCollection;

  this.StudentView = StudentView;

}).call(this);

//# sourceMappingURL=panel.map
