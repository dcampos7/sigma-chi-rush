// Generated by CoffeeScript 1.7.1
(function() {
  var StudentCollection, StudentModel, StudentView, search, stoppedTyping, students,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  StudentModel = (function(_super) {
    __extends(StudentModel, _super);

    function StudentModel() {
      return StudentModel.__super__.constructor.apply(this, arguments);
    }

    StudentModel.prototype.urlRoot = '/student/';

    return StudentModel;

  })(Backbone.Model);

  StudentCollection = (function(_super) {
    __extends(StudentCollection, _super);

    function StudentCollection() {
      return StudentCollection.__super__.constructor.apply(this, arguments);
    }

    StudentCollection.prototype.model = StudentModel;

    StudentCollection.prototype.initalize = function(attributes) {
      return StudentCollection.__super__.initalize.call(this, attributes);
    };

    StudentCollection.prototype.url = function() {
      return '/api/fetch-students/';
    };

    return StudentCollection;

  })(Backbone.Collection);

  StudentView = (function(_super) {
    __extends(StudentView, _super);

    function StudentView() {
      return StudentView.__super__.constructor.apply(this, arguments);
    }

    StudentView.prototype.tagName = "div";

    StudentView.prototype.templateName = "panel-template";

    StudentView.prototype.initalize = function(options) {
      return StudentView.__super__.initalize.apply(this, arguments);
    };

    StudentView.prototype.templateArgs = function() {
      return {
        student: this.model
      };
    };

    StudentView.prototype.render = function() {
      return StudentView.__super__.render.apply(this, arguments);
    };

    return StudentView;

  })(TemplatedView);

  students = new StudentCollection();

  students.fetch();

  search = $('.search input');

  stoppedTyping = null;

  search.focus().keyup(function() {
    if (search.val().length > 2) {
      if (stoppedTyping) {
        clearTimeout(stoppedTyping);
      }
      return stoppedTyping = setTimeout(function() {
        $('.panels').children().remove();
        return students.each(function(student) {
          var name, panel;
          if (student.attributes.name.toLowerCase().indexOf(search.val().toLowerCase()) >= 0) {
            name = student.get('name').replace(/\ /g, '-').replace("'", "-");
            $('.panels').append('<a id="' + name + '" href="/' + name + '/" class="panel navy" data-color="navy"></a>');
            panel = new StudentView({
              el: $('#' + name),
              model: student
            });
            return panel.render();
          }
        });
      }, 500);
    }
  });

  this.StudentModel = StudentModel;

  this.StudentCollection = StudentCollection;

  this.StudentView = StudentView;

}).call(this);

//# sourceMappingURL=panel.map
