// Generated by CoffeeScript 1.7.1
(function() {
  var StudentCollection, StudentModel, StudentView, Students,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  StudentModel = (function(_super) {
    __extends(StudentModel, _super);

    function StudentModel() {
      return StudentModel.__super__.constructor.apply(this, arguments);
    }

    StudentModel.prototype.urlRoot = '/student/';

    return StudentModel;

  })(Backbone.Model);

  StudentCollection = (function(_super) {
    __extends(StudentCollection, _super);

    function StudentCollection() {
      return StudentCollection.__super__.constructor.apply(this, arguments);
    }

    StudentCollection.prototype.model = StudentModel;

    return StudentCollection;

  })(Backbone.Collection);

  StudentView = (function(_super) {
    __extends(StudentView, _super);

    function StudentView() {
      return StudentView.__super__.constructor.apply(this, arguments);
    }

    StudentView.prototype.tagName = "div";

    StudentView.prototype.templateName = "panel-template";

    StudentView.prototype.initalize = function(options) {
      return StudentView.__super__.initalize.apply(this, arguments);
    };

    StudentView.prototype.render = function() {
      StudentView.__super__.render.apply(this, arguments);
      $('#name').html(this.model.get('name'));
      $('#email').html('Email: ' + this.model.get('email'));
      $('#phone').html('Phone: ' + this.model.get('phone'));
      $('#house').html('House: ' + this.model.get('house'));
      $('#room').html('Room: ' + this.model.get('room'));
      return $('#year').html('Year: ' + this.model.get('year'));
    };

    return StudentView;

  })(TemplatedView);

  Students = new StudentCollection();

  $.get('/fetch-students', function(res) {
    Students.add(res);
    return Students.forEach(function(Student) {
      var name, panel;
      name = Student.get('name').replace(' ', '-');
      $('.panels').append('<a id="' + name + '" href="/' + name + '/" class="panel navy" data-color="navy"></a>');
      panel = new StudentView({
        el: $('#' + name),
        model: Student
      });
      return panel.render();
    });
  });

  this.StudentModel = StudentModel;

  this.StudentCollection = StudentCollection;

  this.StudentView = StudentView;

  this.Student = Student;

}).call(this);

//# sourceMappingURL=panel.map
